select *
From [Portfolio Project].. NashvilleHousing


--Standarized Date Format

select SaleDateConverted, CONVERT(date, SaleDate)
From [Portfolio Project].. NashvilleHousing

Update NashvilleHousing
Set SaleDate = CONVERT(date,SaleDate)

Alter Table NashvilleHousing
Add SaleDateConverted Date;

Update NashvilleHousing
Set SaleDateConverted = CONVERT(date,SaleDate)


-- Populate Property Address data

select *
From [Portfolio Project].. NashvilleHousing
--Where PropertyAddress is null
Order By ParcelId

select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
From [Portfolio Project].. NashvilleHousing a
Join [Portfolio Project].. NashvilleHousing b
	On a.ParcelID = b.ParcelID
	And a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null

Update a
Set PropertyAddress =  ISNULL(a.PropertyAddress, b.PropertyAddress)
From [Portfolio Project].. NashvilleHousing a
Join [Portfolio Project].. NashvilleHousing b
	On a.ParcelID = b.ParcelID
	And a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null


--Breaking out Address into Individual Columns (Address, City, State)

select PropertyAddress
From [Portfolio Project].. NashvilleHousing
--Where PropertyAddress is null
--Order By ParcelId


Select PropertyAddress
Substring(PropertyAddress, 1, CharIndex(',' , PropertyAddress) -1) as Address
, Substring(PropertyAddress, CharIndex(',' , PropertyAddress) +1, LEN(PropertyAddress)) as Address 
From [Portfolio Project]..NashvilleHousing

Alter Table [Portfolio Project]..NashvilleHousing  
Add PropertySplitAddress Nvarchar(255);

Update [Portfolio Project]..NashvilleHousing 
Set PropertySplitAddress = Substring(PropertyAddress, 1, CharIndex(',' , PropertyAddress) -1)

Alter Table [Portfolio Project]..NashvilleHousing  
Add PropertySplitCity Nvarchar(255);
 
Update [Portfolio Project]..NashvilleHousing 
Set PropertySplitCity =Substring(PropertyAddress, CharIndex(',' , PropertyAddress) +1, LEN(PropertyAddress))


select OwnerAddress
PARSENAME(REPLACE(OwnerAddress, ',', '.'), 3)
, PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2)
, PARSENAME(REPLACE(OwnerAddress, ',', '.'), 1)
From [Portfolio Project]..NashvilleHousing

Alter Table [Portfolio Project]..NashvilleHousing  
Add OwnerSplitAddress Nvarchar(255);

Update [Portfolio Project]..NashvilleHousing 
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 3)

Alter Table [Portfolio Project]..NashvilleHousing  
Add OwnerSplitCity Nvarchar(255);

Update [Portfolio Project]..NashvilleHousing 
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2)


Alter Table [Portfolio Project]..NashvilleHousing  
Add OwnerSplitState Nvarchar(255);

Update [Portfolio Project]..NashvilleHousing 
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2)

select *
From [Portfolio Project]..NashvilleHousing


-- Change Y and N to Yes and No in 'Sold as Vacant" field

Select Distinct (SoldAsVacant), Count(SoldAsVacant)
From [Portfolio Project]..NashvilleHousing
Group By SoldAsVacant
Order By 2

Select SoldAsVacant
, Case When SoldAsVacant = 'Y' Then 'Yes'
	   When SoldAsVacant = 'N' Then 'No'
	   Else SoldAsVacant
	   End
From [Portfolio Project]..NashvilleHousing


Update [Portfolio Project]..NashvilleHousing
Set SoldAsVacant 
		=
	Case When SoldAsVacant = 'Y' Then 'Yes'
	   When SoldAsVacant = 'N' Then 'No'
	   Else SoldAsVacant
	   End


--Remove Duplicates

With RowNumCTE As(
Select *,
		  ROW_NUMBER() Over (
		  Partition By ParcelId,
								PropertyAddress,
								SalePrice,
								SaleDate,
								LegalReference
								Order By 
										UniqueID)
										row_num
From [Portfolio Project]..NashvilleHousing

)

Select *
--DELETE
From RowNumCTE
Where row_num > 1
Order By PropertyAddress


-- Delete Unused Columns 

Select *
From [Portfolio Project]..NashvilleHousing

Alter Table [Portfolio Project]..NashvilleHousing 
Drop Column OwnerAddress, TaxDistrict, PropertyAddress, SaleDate 
